syntax = "proto3";

package datatx_proto;

message Empty {
}

service Modules {
    rpc List (Empty) returns (ModuleListReply);

    rpc Load (stream ModuleLoadPartRequest) returns (ModuleLoadReply);

    rpc Replace(ModuleReplaceRequest) returns (ModuleReplaceReply);

    rpc Unload (ModuleUnloadRequest) returns (ModuleUnloadReply);
}

message ModuleListRequest {
}

message ModuleListReply {
    int32 item_no = 1;
    repeated ModuleListReplyItem items = 2;
}

message ModuleListReplyItem {
    string name = 1;
    string status = 2;
    int64 successes = 3;
    int64 failures = 4;
    int64 total_messages = 5;
    double fail_rate_per_minute = 6;
}

message ModuleLoadPartRequest {
   bytes zip_file_bytes = 1;
}

message ModuleLoadReply {
    bool success = 1;
    optional string error_message = 2;
    int64 time = 3;
}

message ModuleReplaceRequest {
   bytes zip_file_bytes = 1;
}

message ModuleReplaceReply {
    bool success = 1;
    optional string error_message = 2;
    int64 time = 3;
}

message ModuleUnloadRequest {
   string module_name = 1;
}

message ModuleUnloadReply {
    bool success = 1;
    optional string error_message = 2;
    string unloaded_module_name = 3;
    int64 time = 4;
}

service Processes {
    rpc List (Empty) returns (ProcessListReply);
    
    rpc Kill (ProcessKillRequest) returns (ProcessKillReply);
}

message ProcessListReply {
    repeated ProcessReply processes = 1;
}

message ProcessKillRequest {
    repeated string pids = 1;
}

message ProcessKillReply {
    repeated ProcessReply statuses = 1;
}

message ProcessReply {
    string pid = 1;
    string name = 2;
    string status = 3;
    int64 time = 4;
}

service Data {
    rpc Subscribe(SubscribeRequest) returns (stream SubscribeEntry);

    rpc Push(PushRequest) returns (PushResponse);

    rpc Unsubscribe(UnsubscribeRequest) returns (UnsubscribeReply);
}

message SubscribeRequest {
    string message = 1;
}

message SubscribeEntry {
    string message = 1;
}

message PushRequest {
    string message = 1;
}

message PushResponse {
}

message UnsubscribeRequest {
    repeated string topic = 1;
}

message UnsubscribeReply {
    bool success = 1;
    string error_message = 2;
}